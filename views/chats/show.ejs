
<div class="container">
    <div class="row">
        <div class="col-md-6">
            <h1 class="text-center"> 
                MongoChat
                <button id="clear" class="btn btn-danger">Clear</button>
            </h1>
            <div id="status"></div>
        </div>
        <div id="chat">
            <br>
            <input type="hidden" id="user" name="user" value="<%= user.id %>">
            <input type="hidden" id="chat" name="chat" value="<%= chat.id %>">
            <div class="card">
                <div class="card-block" id="messages" style="height: 300px;"></div>
            </div>
            <br>
            <textarea id="textarea" class="form-control" placeholder="Enter message..." ></textarea>

        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.2/socket.io.js"></script>

<script>
    (function() {
        var element = function(id) {
            return document.getElementById(id);
        }

        //Get Elements
        var status = element('status');
        var messages = element('messages');
        var textarea = element('textarea');
        var user = element('user');
        var chat = element('chat');
        var clearBtn = element('clear');


        //Set default status 
        var statusDefault = status.textContent;

        var setStatus = function(s) {
            status.textContent = s;
            if(s !== statusDefault) {
                var delay = setTimeout(function(){
                    setStatus(statusDefault);
                }, 4000);
            }
        }


        //Connect to socket.io
        var socket = io.connect('http://localhost:5000');
        
        //Check for connection
        if(socket !== undefined) {
            console.log('Connected to socket...');

            //Handle output
            socket.on('output', function(data) {
                //console.log(data);
                if(data.length) {
                    for(var x = 0; x < data.length; x++) {
                        //Build out message div
                        if(data[x].chat == chat.value){
                            var message = document.createElement('div');
                            message.setAttribute('class', 'chat-message');
                            message.textContent = data[x].user + ": " + data[x].message;
                            messages.appendChild(message);
                            messages.insertBefore(message, messages.firstChild);
                        }
                    }
                }
            });

            //Get staus from server
            socket.on('status', function(data) {
                //Get message status
                setStatus((typeof data === 'object') ? data.message : data);

                //If status is clear, clear text
                if(data.clear) {
                    textarea.value = '';
                }
            });

            //Handle Input
            console.log(chat.value)
            textarea.addEventListener('keydown', function(event){
                if(event.which === 13 && event.shiftKey == false) {
                    //Emit to server input
                    socket.emit('input', {
                        message: textarea.value,
                        user: user.value,
                        chat: chat.value
                    });

                    event.preventDefault();
                }
            })

            //Handle Chat Clear
            clearBtn.addEventListener('click', function() {
                socket.emit('clear');
            })

            //Clear message
            socket.on('cleared', function(){
                messages.textContent = '';
            });
        }
    })();
</script>
